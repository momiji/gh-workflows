name: Manual semantic release with docker build

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:

  release:

    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      #issues: write # to be able to comment on released issues
      packages: write # to be able to publish packages

    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup NodeJs
      uses: actions/setup-node@v3
      with:
        node-version: "lts/*"

    - name: Install semantic release
      run: npm install -g semantic-release @semantic-release/changelog @semantic-release/exec @semantic-release/git

    #- name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
    #  run: npm audit signatures     

    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release && test -f .env
    
    - name: Dotenv action
      id: dotenv
      uses: falti/dotenv-action@v1.0.4

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        flavor: |
          latest=false
        images: |
          ghcr.io/momiji/gh-workflows
        tags: |
          type=semver,pattern=v{{major}}.{{minor}}.{{patch}},value=${{steps.dotenv.outputs.RELEASE_VERSION}}
          type=semver,pattern=v{{major}}.{{minor}},value=${{steps.dotenv.outputs.RELEASE_VERSION}}
          type=edge

    - name: Build and push Docker images
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: RELEASE_VERSION="$RELEASE_VERSION"


#    - name: Build the Docker image
#      run: >
#        docker build .
#        --file Dockerfile
#        --build-arg RELEASE_VERSION="$RELEASE_VERSION"
#        --tag gh-workflows:v$RELEASE_VERSION
